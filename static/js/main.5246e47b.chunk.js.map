{"version":3,"sources":["components/TodoList.js","components/todo.js","App.js","reportWebVitals.js","index.js"],"names":["TodoList","todo","markComplete","removeTodo","className","map","x","i","completed","size","onClick","task","type","Todo","useState","setTodo","input","setInput","inputRef","useRef","useEffect","current","focus","data","JSON","parse","localStorage","getItem","setItem","stringify","onSubmit","e","preventDefault","test","push","placeholder","name","value","onChange","target","ref","splice","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kOA+BeA,MA3Bf,YAAmD,IAAhCC,EAA+B,EAA/BA,KAAKC,EAA0B,EAA1BA,aAAaC,EAAa,EAAbA,WACjC,OACI,oBAAIC,UAAU,kBAAd,SACCH,EAAKI,KAAI,SAACC,EAAGC,GAAJ,OACR,oBAAYH,UAAU,8BAAtB,SACE,sBAAKA,UAAU,6BAAf,UACGE,EAAEE,UACD,cAAC,IAAD,CAAMC,KAAK,KAAKC,QAAS,kBAAMR,EAAaK,MAE5C,cAAC,IAAD,CAASE,KAAK,KAAKC,QAAS,kBAAMR,EAAaK,MAEjD,sBAAMH,UAAU,OAAhB,SAAwBE,EAAEK,OAC1B,yBACEC,KAAK,SACLR,UAAU,cACVM,QAAS,kBAAMP,EAAWI,IAH5B,UAKG,IACD,cAAC,IAAD,CAAaH,UAAU,GAAGK,KAAK,cAd5BF,SCsFJM,MA3Ff,WAAiB,IAAD,EACUC,mBAAS,IADnB,mBACPb,EADO,KACDc,EADC,OAEYD,mBAAS,IAFrB,mBAEPE,EAFO,KAEAC,EAFA,KAIPC,EAAWC,iBAAO,MA4CzB,OA1CCC,qBAAU,WACRF,EAASG,QAAQC,WAGpBF,qBAAU,WACR,IAAMG,EAAOC,KAAKC,MAAMC,aAAaC,QAAQ,SAC7CZ,EAAQQ,KACP,IAEHH,qBAAU,WACRM,aAAaE,QAAQ,OAAQJ,KAAKK,UAAU5B,MAC3C,CAACA,IAgCF,qBAAKG,UAAU,aAAf,SACE,sBAAKA,UAAU,wDAAf,UACE,0CACA,sBAAM0B,SAzBS,SAACC,GATN,IAACpB,EAUfoB,EAAEC,kBAVarB,EAWPK,KAVK,QAAQiB,KAAKtB,KAG1BV,EAAKiC,KAAK,CAAEvB,KAAMA,EAAMH,WAAW,IAEnCO,EAAQ,YAAId,KAOZgB,EAAS,KAqBL,SACE,sBAAKb,UAAU,6BAAf,UACE,qBAAKA,UAAU,yBAAf,SACE,uBACEQ,KAAK,OACLR,UAAU,eACV+B,YAAY,+BACZC,KAAK,OACLC,MAAOrB,EACPsB,SA3BS,SAACP,GACtBd,EAASc,EAAEQ,OAAOF,QA2BNG,IAAKtB,MAGT,qBAAKd,UAAU,MAAf,SACE,wBAAQQ,KAAK,SAASR,UAAU,sBAAhC,mBAIF,qBAAKA,UAAU,GAAf,SACE,wBACEQ,KAAK,SACLF,QA5BA,WACZK,EAAQ,KA4BIX,UAAU,uBAHZ,0BAUN,cAAC,EAAD,CACEH,KAAMA,EACNC,aA9Ca,SAACK,GACpBN,EAAKM,GAAGC,WAAaP,EAAKM,GAAGC,UAC7BO,EAAQ,YAAId,KA6CNE,WA3CW,SAACI,GAClBN,EAAKwC,OAAOlC,EAAG,GACfQ,EAAQ,YAAId,aClCDyC,MARf,WACE,OACE,qBAAKtC,UAAU,MAAf,SACA,cAAC,EAAD,OCKWuC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5246e47b.chunk.js","sourcesContent":["import React from 'react'\nimport { FcDeleteRow, FcOk, FcLeave } from \"react-icons/fc\";\n\n\nfunction TodoList({todo,markComplete,removeTodo}) {\n    return (\n        <ul className=\"list-group  m-5\">\n        {todo.map((x, i) => (\n          <li key={i} className=\" list-group-item text-start\">\n            <div className=\" d-flex align-items-center\">\n              {x.completed ? (\n                <FcOk size=\"30\" onClick={() => markComplete(i)} />\n              ) : (\n                <FcLeave size=\"30\" onClick={() => markComplete(i)} />\n              )}\n              <span className=\"mx-3\">{x.task}</span>\n              <button\n                type=\"button\"\n                className=\"btn ms-auto\"\n                onClick={() => removeTodo(i)}\n              >\n                {\" \"}\n                <FcDeleteRow className=\"\" size=\"30\" />\n              </button>\n            </div>\n          </li>\n        ))}\n      </ul>\n    )\n}\n\nexport default TodoList\n","import React, { useEffect, useRef, useState } from \"react\";\nimport TodoList from \"./TodoList\";\n\nfunction Todo() {\n  const [todo, setTodo] = useState([]);\n  const [input, setInput] = useState(\"\");\n\n   const inputRef = useRef(null);\n\n   useEffect(() => {\n     inputRef.current.focus();\n   });\n\n  useEffect(() => {\n    const data = JSON.parse(localStorage.getItem(\"todo\"));\n    setTodo(data);\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"todo\", JSON.stringify(todo));\n  }, [todo]);\n  const addTodo = (task) => {\n    if (!task || /^\\s*$/.test(task)) {\n      return;\n    }\n    todo.push({ task: task, completed: false });\n\n    setTodo([...todo]);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    addTodo(input);\n\n    setInput('');\n  };\n\n  const handleOnchange = (e) => {\n    setInput(e.target.value);\n  };\n  const markComplete = (i) => {\n    todo[i].completed = !todo[i].completed;\n    setTodo([...todo]);\n  };\n  const removeTodo = (i) => {\n    todo.splice(i, 1);\n    setTodo([...todo]);\n  };\n  const reset = () => {\n    setTodo([]);\n  };\n  return (\n    <div className=\"container \">\n      <div className=\"card m-auto vh-100 shadow-lg p-3 m-5 bg-white rounded\">\n        <h1>Todo App</h1>\n        <form onSubmit={handleSubmit}>\n          <div className=\"d-flex  align-items-center\">\n            <div className=\"input-group my-4 mr-3 \">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                placeholder=\"ADD YOUR TODO FOR THE DAY...\"\n                name=\"todo\"\n                value={input}\n                onChange={handleOnchange}\n                ref={inputRef}\n              />\n            </div>\n            <div className=\"m-3\">\n              <button type=\"submit\" className=\"btn btn-danger ml-3\">\n                Add\n              </button>\n            </div>\n            <div className=\"\">\n              <button\n                type=\"submit\"\n                onClick={reset}\n                className=\"btn btn-warning ml-3\"\n              >\n                Reset\n              </button>\n            </div>\n          </div>\n        </form>\n        <TodoList\n          todo={todo}\n          markComplete={markComplete}\n          removeTodo={removeTodo}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default Todo;\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport Todo from './components/todo';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    <Todo />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}